[{"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/App.jsx":"1","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Dashboard.jsx":"2","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/index.js":"3","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/setupTests.js":"4","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/colors.js":"5","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/index.js":"6","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/layout.js":"7","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/props.js":"8","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/typography.js":"9","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/Default/themeOptions.js":"10","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/api/socket-service.jsx":"11","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/AppHeader.jsx":"12","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Log/Log.jsx":"13","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Map/Map.jsx":"14","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Video/Video.jsx":"15","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Map/Canvas.jsx":"16","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/assets/index.js":"17","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Login/Login.jsx":"18","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/api/login.js":"19","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Login/Home.jsx":"20","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Login/UserCreation.jsx":"21"},{"size":1238,"mtime":1611318786994,"results":"22","hashOfConfig":"23"},{"size":8418,"mtime":1611318337962,"results":"24","hashOfConfig":"23"},{"size":420,"mtime":1603798769659,"results":"25","hashOfConfig":"23"},{"size":120,"mtime":1601548408748,"results":"26","hashOfConfig":"23"},{"size":2749,"mtime":1604056632384,"results":"27","hashOfConfig":"23"},{"size":231,"mtime":1602847168593,"results":"28","hashOfConfig":"23"},{"size":339,"mtime":1601983828906,"results":"29","hashOfConfig":"23"},{"size":150,"mtime":1601983828906,"results":"30","hashOfConfig":"23"},{"size":2219,"mtime":1603796687099,"results":"31","hashOfConfig":"23"},{"size":2300,"mtime":1604056116715,"results":"32","hashOfConfig":"23"},{"size":572,"mtime":1611318318966,"results":"33","hashOfConfig":"23"},{"size":3426,"mtime":1604068655545,"results":"34","hashOfConfig":"23"},{"size":1370,"mtime":1611316448116,"results":"35","hashOfConfig":"23"},{"size":3164,"mtime":1604052132100,"results":"36","hashOfConfig":"23"},{"size":3478,"mtime":1611318585042,"results":"37","hashOfConfig":"23"},{"size":3079,"mtime":1603372704197,"results":"38","hashOfConfig":"23"},{"size":915,"mtime":1603106107919,"results":"39","hashOfConfig":"23"},{"size":6322,"mtime":1611312567411,"results":"40","hashOfConfig":"23"},{"size":497,"mtime":1611318380027,"results":"41","hashOfConfig":"23"},{"size":2467,"mtime":1604056783100,"results":"42","hashOfConfig":"23"},{"size":11610,"mtime":1604068913499,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"53mqwm",{"filePath":"46","messages":"47","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/App.jsx",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Dashboard.jsx",["91","92","93","94","95","96","97","98"],"import React, { PureComponent } from 'react'\nimport { Box, Typography, Grid } from '@material-ui/core'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport Video from './Video/Video'\nimport Log from './Log/Log'\nimport Map from './Map/Map'\nimport AppHeader from './AppHeader'\nimport AppBar from '@material-ui/core/AppBar'\nimport { connect } from '../../api/socket-service'\nimport { refreshToken } from '../../api/login'\nimport {\n    ellipse, blueCross, yellowCross, whiteCross, greyCross, arrowLeft, arrowTop, deviationBlue, deviationYellow, deviationWhite, deviationGrey\n} from '../../assets'\n\nconst objectsImages = [{ image: blueCross }, { image: yellowCross }, { image: whiteCross }, { image: greyCross }]\nconst deviationImages = [{ image: deviationBlue }, { image: deviationYellow }, { image: deviationWhite }, { image: deviationGrey }]\n\nconst data = {\n    token: 'dsddsad',\n    drone: { id: 'fdfdf', name: 'Drone name here', height: { data: 10, unit: 'meter' }, map: { x: 20, y: 50 } },\n    objects: [{\n        type: 'pedestrian',\n        id: 1,\n        map: { x: 20, y: 46.39308736141907 },\n        log: {\n            originalMetrics: { map: { x: 18, y: 48 }, distance: { data: 9, unit: 'meter' }, direction: { data: 8, unit: 'degree' }, gps: { longitude: 76.5997653, latitude: 11.4466737 } },\n            deviation: {\n                isFound: true, percentage: 5, 'max-percentage': 5, distance: { data: 1, unit: 'meter' }, direction: { data: 2, unit: 'degree' }, gps: { longitude: '01.0000000', latitude: '01.0000000' }\n            },\n            message: '<red>Obj(1) measured distance 10 m vs 9m, 10 deg vs 8 deg at Error rate 5% <red>'\n        },\n        metrics: { distance: { data: 3.61, unit: 'meter' }, direction: { data: 10, unit: 'degree' }, gps: { longitude: 77.5997653, latitude: 11.4466737 } }\n    }, {\n        type: 'pedestrian',\n        id: 2,\n        map: { x: 150, y: 46.45194233502538 },\n        log: {\n            originalMetrics: { map: { x: 18, y: 48 }, distance: { data: 9, unit: 'meter' }, direction: { data: 8, unit: 'degree' }, gps: { longitude: 76.5997653, latitude: 11.4466737 } },\n            deviation: {\n                isFound: true, percentage: 5, 'max-percentage': 5, distance: { data: 1, unit: 'meter' }, direction: { data: 2, unit: 'degree' }, gps: { longitude: '01.0000000', latitude: '01.0000000' }\n            },\n            message: '<red>Obj(1) measured distance 10 m vs 9m, 10 deg vs 8 deg at Error rate 5% <red>'\n        },\n        metrics: { distance: { data: 3.55, unit: 'meter' }, direction: { data: 10, unit: 'degree' }, gps: { longitude: 77.5997653, latitude: 11.4466737 } }\n    }]\n}\n\nclass Dashboard extends PureComponent {\n    constructor (props) {\n        super(props)\n\n        this.refreshInterval = setInterval(() => {\n            this.refreshToken()\n        }, 1500000)\n\n        this.state = {\n            socketData: undefined,\n            logData: [],\n            mapViewData: [{ uri: arrowLeft, x: 16, y: 279 }, { uri: arrowTop, x: 26, y: 270 }],\n            isProdMode: true\n        }\n\n        this.handleDashboardData = this.handleDashboardData.bind(this)\n        this.handleChangeEnvironment = this.handleChangeEnvironment.bind(this)\n        this.refreshToken = this.refreshToken.bind(this)\n\n        connect(message => {\n            if (message.drone) {\n                this.setState({ socketData: message })\n                this.handleDashboardData()\n            }\n        }, this.state.isProdMode)\n    }\n\n    handleChangeEnvironment () {\n        this.setState({ isProdMode: !this.state.isProdMode })\n        connect(message => {\n            if (message.drone) {\n                this.setState({ socketData: message })\n                this.handleDashboardData()\n            }\n        }, !this.state.isProdMode)\n    }\n\n    handleDashboardData () {\n        const { socketData } = this.state\n        this.setState(prevState => ({\n            mapViewData: [{ uri: arrowLeft, x: 16, y: 279 }, { uri: arrowTop, x: 26, y: 270 }]\n        }))\n        this.setState(prevState => ({\n            logData: [...prevState.logData, { 'break': true }]\n        }))\n        this.setState(prevState => ({\n            mapViewData: [...prevState.mapViewData, { uri: ellipse, x: (socketData.drone.map.x), y: (socketData.drone.map.y) }]\n        }))\n        if (socketData && socketData.objects.length) {\n            socketData.objects.map((object, index) => {\n                this.setState(prevState => ({\n                    logData: [...prevState.logData, { deviation: object.log.deviation.isFound, message: object.log.message }],\n                    mapViewData: [...prevState.mapViewData, { uri: objectsImages[index].image, x: (object.map.x), y: (object.map.y) }]\n                }))\n            })\n            if (!this.state.prodMode) {\n                socketData.objects.map((object, index) => {\n                    this.setState(prevState => ({\n                        mapViewData: [...prevState.mapViewData, { uri: deviationImages[index].image, x: (object.log.originalMetrics.map.x), y: (object.log.originalMetrics.map.y) }]\n                    }))\n                })\n            }\n        }\n    }\n\n    refreshToken () {\n        refreshToken().then(response => {\n            alert('Session refreshed')\n            Cookies.set('token', response.data.access_token)\n        })\n            .catch(err => {\n                if (err.response && err.response.data.msg === 'Invalid Token') {\n                    alert('Session expired login to continue')\n                    Cookies.remove('token')\n                    this.props.history.push('/')\n                }\n            })\n    }\n\n    componentWillUnmount () {\n        clearInterval(this.refreshInterval)\n    }\n\n    render () {\n\n        return (\n            <Grid container alignItems=\"center\">\n                <Grid item xs={12}>\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <AppBar position=\"fixed\">\n                            <AppHeader changeEnvironment={this.handleChangeEnvironment} prodMode={this.state.isProdMode} />\n                        </AppBar>\n                        <Box display=\"flex\" flexDirection=\"row\" mx={22} mt={20} zIndex={1}>\n                            <Box width=\"45%\" mr={4}>\n                                <Box height=\"35px\" color=\"white.200\">\n                                    <Typography variant=\"h3\">Camera view</Typography>\n                                </Box>\n                                <Box height=\"400px\" borderRadius={4} border={1} borderColor=\"white.200\">\n                                    <Video droneData={this.state.socketData && this.state.socketData.drone} droneObjectCount={this.state.socketData && this.state.socketData.objects.length} />\n                                </Box>\n                            </Box>\n                            <Box width=\"45%\" mr={4}>\n                                <Box height=\"35px\" color=\"white.200\">\n                                    <Typography variant=\"h3\">GPS view</Typography>\n                                </Box>\n                                <Box height=\"400px\" borderRadius={4} border={1} borderColor=\"white.200\">\n                                    <Map mapViewDetails={this.state.mapViewData} prodMode={this.state.isProdMode} />\n                                </Box>\n                            </Box>\n                            {!this.state.isProdMode &&\n                            <Box width=\"398px\" mr={4}>\n                                <Box height=\"35px\" color=\"white.200\">\n                                    <Typography variant=\"h3\">Logs</Typography>\n                                </Box>\n                                <Box height=\"400px\" borderRadius={4} border={1} borderColor=\"white.200\">\n                                    <Scrollbars\n                                        renderThumbVertical={({ style, ...props }) =>\n                                            <Box mr={3} mt={3} mb={3} {...props} width=\"4px\" bgcolor=\"white.200\" borderRadius=\"5px\" />}\n                                    >\n                                        <Log message={this.state.logData} />\n                                    </Scrollbars>\n                                </Box>\n                            </Box>}\n                        </Box>\n                    </Box>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default Dashboard\n","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/index.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/setupTests.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/colors.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/index.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/layout.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/props.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/constants/typography.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/themes/Default/themeOptions.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/api/socket-service.jsx",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/AppHeader.jsx",["99","100","101","102","103"],"import React, { PureComponent } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {\n    Typography, Box, Menu, MenuItem, IconButton, Fade, Switch\n} from '@material-ui/core'\nimport { headerIcon, wave, profile } from '../../assets'\nimport Cookies from 'js-cookie'\nimport { logout } from '../../api/login'\n\nclass AppHeader extends PureComponent {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            anchorEl: null\n        }\n\n        this.handleOpenMenu = this.handleOpenMenu.bind(this)\n        this.handleCloseMenu = this.handleCloseMenu.bind(this)\n        this.handleLogout = this.handleLogout.bind(this)\n    }\n\n    handleOpenMenu ({ currentTarget: anchorEl }) {\n        this.setState({ anchorEl })\n    }\n\n    handleCloseMenu () {\n        this.setState({ anchorEl: null })\n    }\n\n    handleLogout () {\n        logout().then(response => {\n            Cookies.remove('token')\n            this.props.history.push('/')\n        })\n            .catch(err => {\n                if (err.response && err.response.data.msg === 'Invalid Token') {\n                    alert('Session expired login to continue')\n                    Cookies.remove('token')\n                    this.props.history.push('/')\n                }\n            })\n    }\n\n    render () {\n        return (\n            <Box height=\"50px\" display=\"flex\" flexDirection=\"row\">\n                <Box width=\"100%\" display=\"flex\" flexDirection=\"row\">\n                    <Box p={3} component=\"span\">\n                        <img src={headerIcon} width=\"25px\" height=\"25px\" />\n                    </Box>\n                    <Box p={4}>\n                        <img src={wave} width=\"60px\" />\n                    </Box>\n                </Box>\n                <Box flexShrink={0} display=\"flex\" flexDirection=\"row\">\n                    <Box p={3} component=\"span\">\n                        <Typography variant=\"caption\">Prod Mode</Typography>\n                        <Switch\n                            checked={this.props.prodMode}\n                            onChange={this.props.changeEnvironment}\n                            name=\"checkedA\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        />\n                    </Box>\n                    <Box p={3} component=\"span\">\n                        <Typography variant=\"h6\">John Doe</Typography>\n                    </Box>\n                    <Box pr={5}>\n                        <IconButton aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={this.handleOpenMenu}>\n                            <img src={profile} width=\"30px\" height=\"30px\" />\n                        </IconButton>\n                        <Menu\n                            id=\"fade-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl)}\n                            onClose={this.handleCloseMenu}\n                            TransitionComponent={Fade}\n                        >\n                            <MenuItem onClick={this.handleLogout}>Logout</MenuItem>\n                        </Menu>\n                    </Box>\n                </Box>\n            </Box>\n        )\n    }\n}\n\nAppHeader.propTypes = {\n    prodMode: PropTypes.bool,\n    changeEnvironment: PropTypes.func\n}\n\nexport default withRouter(AppHeader)\n","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Log/Log.jsx",["104","105","106","107"],"import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Typography } from '@material-ui/core'\n\nclass Log extends PureComponent {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            isTrajectories: true\n        }\n\n        this.handleChangeTracjectory = this.handleChangeTracjectory.bind(this)\n    }\n\n    handleChangeTracjectory () {\n        this.setState({ isTrajectories: !this.state.isTrajectories })\n    }\n\n    render () {\n        return (\n            <>\n                {this.props.message.length ? (\n                    <Box display=\"flex\" flexDirection=\"column\" p={4}>\n                        {\n                            this.props.message.reverse().map((listData, index) =>\n                                <Box key={index} color={listData.deviation ? 'red.600' : 'white.100'}>\n                                    {listData.break ? <br /> : listData.message}\n                                </Box>\n                            )\n                        }\n                    </Box>) : (\n                        <Box display=\"flex\" flexDirection=\"column\" p={4} color=\"white.200\">\n                        <Typography variant=\"body1\">No objects found!</Typography>\n                    </Box>)}\n            </>\n        )\n    }\n}\n\nLog.propTypes = {\n    message: PropTypes.array\n}\n\nexport default Log\n","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Map/Map.jsx",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Video/Video.jsx",["108","109","110","111","112","113","114","115"],"import React, { PureComponent } from 'react'\nimport Box from '@material-ui/core/Box'\nimport { Typography, Switch } from '@material-ui/core'\nimport Iframe from 'react-iframe'\nimport PropTypes from 'prop-types'\n\nclass Video extends PureComponent {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            isTrajectories: true\n        }\n\n        this.handleChangeTracjectory = this.handleChangeTracjectory.bind(this)\n    }\n\n    handleChangeTracjectory () {\n        this.setState({ isTrajectories: !this.state.isTrajectories })\n    }\n\n    render () {\n        const surveillanceUrl = this.state.isTrajectories ? '/video_trajectory' : '/video'\n        const { droneData, droneObjectCount } = this.props\n\n        return (\n            <Box display=\"flex\" flexDirection=\"column\" color=\"white.100\">\n                <Box height=\"300px\" width=\"300px\" mb={5} alignItems=\"center\">\n                    <Iframe\n                        url={surveillanceUrl}\n                        className=\"video-frame\"\n                        display=\"initial\"\n                        position=\"relative\"\n                        height=\"100%\"\n                        width=\"100%\"\n                        frameBorder=\"0\"\n                    />\n                </Box>\n                <Box>\n                    <Box display=\"flex\" flexDirection=\"row\">\n                        <Box width=\"100%\" display=\"flex\" flexDirection=\"row\">\n                            <Box pr={2} ml={4} width=\"50px\">\n                                <Typography variant=\"caption\">\n                                    Drone Height:\n                                </Typography>\n                            </Box>\n                            {this.props.droneData &&\n                            <Box pr={5} pt={1}>\n                                <Typography variant=\"h2\">\n                                    {`${droneData.height.data} ${droneData.height.unit.charAt(0)}`}\n                                </Typography>\n                            </Box>}\n                            <Box pr={2} width=\"70px\">\n                                <Typography variant=\"caption\">\n                                    Detecting objects:\n                                </Typography>\n                            </Box>\n                            {droneObjectCount &&\n                            <Box pt={1}>\n                                <Typography pt={2} variant=\"h2\">\n                                    {droneObjectCount}\n                                </Typography>\n                            </Box>}\n                        </Box>\n                        <Box flexShrink={0}>\n                            <Box>\n                                <Typography variant=\"body1\" component=\"span\">\n                                    Trajectories\n                                </Typography>\n                                <Switch\n                                    checked={this.state.isTrajectories}\n                                    onChange={this.handleChangeTracjectory}\n                                    name=\"checkedA\"\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        )\n    }\n}\n\nMap.propTypes = {\n    droneData: PropTypes.object,\n    droneObjectCount: PropTypes.number\n}\n\nexport default Video\n","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Dashboard/Map/Canvas.jsx",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/assets/index.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Login/Login.jsx",["116","117","118"],"import React, { PureComponent } from 'react'\nimport {\n    Box, Typography, Grid, TextField, Button\n} from '@material-ui/core'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { loginUser } from '../../api/login'\nimport PropTypes from 'prop-types'\n\nimport Cookies from 'js-cookie'\n\nclass Login extends PureComponent {\n    constructor (props) {\n        super(props)\n        this.state = {\n            loginDetails: {\n                userId: '',\n                password: ''\n            }\n        }\n        this.handleLogin = this.handleLogin.bind(this)\n        this.handleChangeUserId = this.handleChangeUserId.bind(this)\n        this.handleChangePassword = this.handleChangePassword.bind(this)\n    }\n\n    handleLogin () {\n        Cookies.remove('token')\n        event.preventDefault()\n        const loginDetails = {\n            userId: this.state.loginDetails.userId,\n            password: this.state.loginDetails.password\n        }\n\n        loginUser(loginDetails).then(response => {\n            Cookies.set('token', response.data.access_token)\n            if (Cookies.get('token') !== null) {\n                axios.defaults.headers.common.Authorization = `Bearer ${Cookies.get('token')}`\n                this.props.history.push('/dashboard')\n            }\n        })\n            .catch(err => alert('Incorrect login credentials'))\n    }\n\n    handleChangeUserId ({ target: { value } }) {\n        const { loginDetails } = this.state\n        this.setState({ loginDetails: { ...loginDetails, userId: value } })\n    }\n\n    handleChangePassword ({ target: { value } }) {\n        const { loginDetails } = this.state\n        this.setState({ loginDetails: { ...loginDetails, password: value } })\n    }\n\n    render () {\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item xs={4}>\n                    <Box mt={30} borderRadius={4} border={1} borderColor=\"white.200\">\n                        <form onSubmit={this.handleLogin} autoComplete=\"off\">\n                            <Grid container justify=\"center\" alignItems=\"center\">\n                                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                                    <Box p={4} color=\"white.300\">\n                                        <Typography variant=\"h1\">Lotte Drone Surveillance</Typography>\n                                    </Box>\n                                </Grid>\n                                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                                    <Box px={10} py={4} color=\"white.200\">\n                                        <TextField\n                                            fullWidth\n                                            required\n                                            id=\"login-name\"\n                                            label=\"Username\"\n                                            type=\"text\"\n                                            value={this.state.loginDetails.userId}\n                                            onChange={this.handleChangeUserId}\n                                            InputLabelProps={{\n                                                classes: {\n                                                    root: this.props.textField.label,\n                                                    focused: this.props.textField.focusedLabel\n                                                },\n                                                className: this.props.textField.label\n                                            }}\n                                            InputProps={{\n                                                classes: {\n                                                    root: this.props.textField.underline\n                                                }\n                                            }}\n                                        />\n                                    </Box>\n                                </Grid>\n                                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                                    <Box px={10} py={4} color=\"white.200\">\n                                        <TextField\n                                            fullWidth\n                                            required\n                                            id=\"login-password\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            value={this.state.loginDetails.password}\n                                            onChange={this.handleChangePassword}\n                                            InputLabelProps={{\n                                                classes: {\n                                                    root: this.props.textField.label,\n                                                    focused: this.props.textField.focusedLabel\n                                                },\n                                                className: this.props.textField.label\n                                            }}\n                                            InputProps={{\n                                                classes: {\n                                                    root: this.props.textField.underline\n                                                }\n                                            }}\n                                        />\n                                    </Box>\n                                </Grid>\n                                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                                    <Box px={4} pt={5} pb={10} color=\"white.200\">\n                                        <Button variant=\"contained\" type=\"submit\" color=\"secondary\" fontSize=\"small\">\n                                            Login\n                                        </Button>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n            </Grid>\n\n        )\n    }\n}\n\nLogin.propTypes = {\n    textField: PropTypes.object.isRequired\n}\n\nexport default withRouter(Login)\n","/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/api/login.js",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Login/Home.jsx",[],"/home/vidyashree/Project/Lotte/Lotte-Drone-Surveillance/src/components/Login/UserCreation.jsx",[],{"ruleId":"119","severity":2,"message":"120","line":18,"column":7,"nodeType":"121","endLine":18,"endColumn":11},{"ruleId":"122","severity":2,"message":"123","line":106,"column":1,"nodeType":"124","messageId":"125"},{"ruleId":"126","severity":2,"message":"127","line":116,"column":13,"nodeType":"121","messageId":"128","endLine":116,"endColumn":20},{"ruleId":"126","severity":2,"message":"127","line":121,"column":21,"nodeType":"121","messageId":"128","endLine":121,"endColumn":28},{"ruleId":"129","severity":2,"message":"130","line":122,"column":32,"nodeType":"121","endLine":122,"endColumn":39},{"ruleId":"129","severity":2,"message":"131","line":122,"column":40,"nodeType":"121","endLine":122,"endColumn":44},{"ruleId":"132","severity":2,"message":"133","line":138,"column":40,"nodeType":"134","endLine":138,"endColumn":88},{"ruleId":"122","severity":2,"message":"135","line":146,"column":1,"nodeType":"124","messageId":"125"},{"ruleId":"129","severity":2,"message":"130","line":35,"column":24,"nodeType":"121","endLine":35,"endColumn":31},{"ruleId":"129","severity":2,"message":"131","line":35,"column":32,"nodeType":"121","endLine":35,"endColumn":36},{"ruleId":"129","severity":2,"message":"130","line":41,"column":32,"nodeType":"121","endLine":41,"endColumn":39},{"ruleId":"129","severity":2,"message":"131","line":41,"column":40,"nodeType":"121","endLine":41,"endColumn":44},{"ruleId":"132","severity":2,"message":"136","line":62,"column":29,"nodeType":"134","endLine":62,"endColumn":68},{"ruleId":"137","severity":2,"message":"138","line":33,"column":1,"nodeType":"139","messageId":"140","endLine":33,"endColumn":25,"fix":"141"},{"ruleId":"142","severity":2,"message":"143","line":34,"column":25,"nodeType":"144","endLine":34,"endColumn":53,"fix":"145"},{"ruleId":"142","severity":2,"message":"146","line":35,"column":21,"nodeType":"147","endLine":35,"endColumn":27,"fix":"148"},{"ruleId":"149","severity":2,"message":"150","line":35,"column":21,"nodeType":"147","endLine":35,"endColumn":27,"fix":"151"},{"ruleId":"129","severity":2,"message":"152","line":24,"column":17,"nodeType":"153","endLine":24,"endColumn":26},{"ruleId":"129","severity":2,"message":"154","line":24,"column":28,"nodeType":"153","endLine":24,"endColumn":44},{"ruleId":"129","severity":2,"message":"152","line":47,"column":41,"nodeType":"121","endLine":47,"endColumn":50},{"ruleId":"129","severity":2,"message":"155","line":50,"column":51,"nodeType":"121","endLine":50,"endColumn":57},{"ruleId":"129","severity":2,"message":"156","line":50,"column":58,"nodeType":"121","endLine":50,"endColumn":62},{"ruleId":"129","severity":2,"message":"155","line":50,"column":76,"nodeType":"121","endLine":50,"endColumn":82},{"ruleId":"129","severity":2,"message":"157","line":50,"column":83,"nodeType":"121","endLine":50,"endColumn":87},{"ruleId":"129","severity":2,"message":"158","line":50,"column":88,"nodeType":"121","endLine":50,"endColumn":94},{"ruleId":"129","severity":2,"message":"130","line":38,"column":28,"nodeType":"121","endLine":38,"endColumn":35},{"ruleId":"129","severity":2,"message":"131","line":38,"column":36,"nodeType":"121","endLine":38,"endColumn":40},{"ruleId":"159","severity":2,"message":"160","line":41,"column":20,"nodeType":"161","messageId":"162","endLine":41,"endColumn":63},"no-unused-vars","'data' is assigned a value but never used.","Identifier","max-len","This line has a length of 180. Maximum allowed is 160.","Program","max","no-undef","'Cookies' is not defined.","undef","react/prop-types","'history' is missing in props validation","'history.push' is missing in props validation","react/jsx-handler-names","Prop key for handleChangeEnvironment must begin with 'on'","JSXAttribute","This line has a length of 191. Maximum allowed is 160.","Handler function for onChange prop key must be a camelCase name beginning with 'handle' only","indent","Expected indentation of 20 spaces but found 24.","Punctuator","wrongIndentation",{"range":"163","text":"164"},"react/jsx-indent","Expected indentation of 28 space characters but found 24.","JSXOpeningElement",{"range":"165","text":"166"},"Expected indentation of 24 space characters but found 20.","JSXClosingElement",{"range":"167","text":"168"},"react/jsx-closing-tag-location","Expected closing tag to match indentation of opening.",{"range":"169","text":"168"},"'droneData' is missing in props validation","Property","'droneObjectCount' is missing in props validation","'droneData.height' is missing in props validation","'droneData.height.data' is missing in props validation","'droneData.height.unit' is missing in props validation","'droneData.height.unit.charAt' is missing in props validation","handle-callback-err","Expected error to be handled.","ArrowFunctionExpression","expected",[1062,1086],"                    ",[1154,1178],"                            ",[1237,1257],"                        ",[1237,1257]]